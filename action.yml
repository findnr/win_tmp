name: win_tmp
inputs:
    zerotier_id:
      required: true
      type: string
    zerotier_token:
      required: true
      type: string
    wx_push_app_token:
      required: true
      type: string
    wx_uid:
      required: true
      type: string
jobs:
  build:
    steps:
    - name: install zerotier
      run: |
         $env:USERNAME
         Write-Host "downloading ZeroTier msi progra..."
         $installerPath = "$env:TEMP\ZeroTierInstaller.msi"
         Invoke-WebRequest -Uri "https://download.zerotier.com/dist/ZeroTier%20One.msi" -OutFile $installerPath
         Write-Host "install working ZeroTier..."
         Start-Process -FilePath "msiexec.exe" -ArgumentList "/i $installerPath /qn /norestart" -Wait
         cd 'C:\Program Files (x86)\ZeroTier\One\'
         ./zerotier_desktop_ui.exe
    - uses: cygwin/cygwin-install-action@master
    - name: join zerotier network id
      run: |
         cd 'C:\Program Files (x86)\ZeroTier\One\'
         ./zerotier-cli join "${{ inputs.zerotier_id }}"
    - name: download sougou wubi
      run: |
        $url = "https://api.github.com/repos/${{ github.repository }}/releases/latest"
        $release = Invoke-RestMethod -Uri $url -Headers @{"Authorization"="Bearer ${{ secrets.GITHUB_TOKEN }}"} 
        $downloadUrl = $release.assets | Where-Object { $_.name -eq "sougouwubi.exe" } | Select-Object -ExpandProperty browser_download_url
        Invoke-WebRequest -Uri $downloadUrl -OutFile sougouwubi.exe
        # Start-Process -FilePath "D:\a\actions_os\actions_os\sougouwubi.exe" -ArgumentList "/S" -Wait -NoNewWindow
    - name: download sougou pinyin
      run: | 
        $url = "https://api.github.com/repos/${{ github.repository }}/releases/latest"
        $release = Invoke-RestMethod -Uri $url -Headers @{"Authorization"="Bearer ${{ secrets.GITHUB_TOKEN }}"} 
        $downloadUrl = $release.assets | Where-Object { $_.name -eq "sougoupinyin.exe" } | Select-Object -ExpandProperty browser_download_url
        Invoke-WebRequest -Uri $downloadUrl -OutFile "sougoupinyin.exe"
        # Start-Process -FilePath "D:\a\actions_os\actions_os\sougoupinyin.exe" -ArgumentList "/S" -Wait -NoNewWindow
    - name: create desktop link
      run: |
        $TargetPath = Get-Location
        $DesktopPath = [Environment]::GetFolderPath("Desktop")
        $ShortcutName = "install.lnk"
        $ShortcutPath = Join-Path -Path $DesktopPath -ChildPath $ShortcutName
        $WScriptShell = New-Object -ComObject WScript.Shell
        $Shortcut = $WScriptShell.CreateShortcut($ShortcutPath)
        $Shortcut.TargetPath = $TargetPath
        $Shortcut.Save()
    - name: set runneradmin password and use wxpush push ip address own weixin
      run: |
         cd 'C:\Program Files (x86)\ZeroTier\One\'
         ./zerotier-cli info
         Start-Sleep -Seconds 5
         ipconfig
         $currentUsername = $env:USERNAME
         $defaultPassword = ConvertTo-SecureString "qaz,123456" -AsPlainText -Force
         Set-LocalUser -Name $currentUsername -Password $defaultPassword
         $networkAdapter = Get-NetIPAddress -InterfaceAlias "*One*" -AddressFamily IPv4
         $ip=$networkAdapter.IPAddress
         $response=Invoke-RestMethod -Uri "https://wxpusher.zjiecode.com/api/send/message/?appToken=${{ inputs.wx_push_app_token }}&content=win:$ip&uid=${{ inputs.wx_uid }}url=http%3a%2f%2fwxpusher.zjiecode.com" -Method Get
         Write-Output $response
         Start-Sleep -Seconds 21400
    - name: delete network node
      run: |
        $response = Invoke-RestMethod -Uri "https://api.zerotier.com/api/v1/network/${{ inputs.zerotier_id }}}/member" -Headers @{"Authorization" = "token ${{ inputs.zerotier_token }} -Method Get -ContentType "application/json"
        $networkAdapter = Get-NetIPAddress -InterfaceAlias "*One*" -AddressFamily IPv4
        foreach ($item in $response) {
            if ($item.config.ipAssignments -eq $networkAdapter.IPAddress) {
                $tmp=$item.nodeId
                Invoke-RestMethod -Uri "https://api.zerotier.com/api/v1/network/${{ inputs.zerotier_id }}/member/$tmp" -Headers @{"Authorization" = "token ${{ inputs.zerotier_token }}"} -Method Delete
                Write-Output $item.nodeId
            } else {
                Write-Output "Strings are not equal"
            }
        }
